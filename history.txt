- using Python 3.10.5
- install luigi (pip install wheel luigi) !!! must have admin rights (or a different environment)


Test 1
======
- create task StockTwitScrape (file: load_twits.py)
- run: set PYTHONPATH=E:\Work\A5\production architecture\luigi
- run: luigi --module load_twits StockTwitScrape --local-scheduler


Test 2
======
- create file hello.py with two tasks

# --local-scheduler

- run: luigi --module hello HelloWorld --local-scheduler (create output)
- run: luigi --module hello NameSubstituter --local-scheduler  --name Marius (this one has a dependency, will run HelloWorld before, and need a parameter 'name')

#--scheduler-host
- run: luigid (start a service, can see stuff here: http://localhost:8082/)
- run: python hello.py --scheduler-host localhost NameSubstituter --name Marius

Test3
=====
- create file hello-world.py with a simple task

- run this in linux: PYTHONPATH='.' luigi --module hello-world HelloLuigi --local-scheduler
- run this in windows: set PYTHONPATH=. & luigi --module hello-world HelloLuigi --local-scheduler
- or this for localhost: python hello-world.py --scheduler-host localhost HelloLuigi

- create file word-frequency.py
- run: python word-frequency.py --scheduler-host localhost GetTopBooks
- run: python word-frequency.py --scheduler-host localhost TopWords --workers 2
- run: luigi-deps-tree --module word-frequency TopWords (not working!)

Production tests
================

python flow-run.py word-frequency.TopWords marius
python flow-continue.py <session-id> marius
python flow-status.py <session-id> marius
python flow-extend.py <session-id> marius tools.FileExistTask --filePath data/summary.txt
python flow-clean.py <sess1> ... <sessN> [-a]

Luigi CLI Tools
===============
- luigi
- luigid
- luigi-grep: is used to search for workflows using the luigi scheduler's json api [-h] [--scheduler-host SCHEDULER_HOST] [--scheduler-port SCHEDULER_PORT] [--prefix PREFIX] [--status STATUS]
- luigi-deps: 
- luigi-deps-tree:

SQLite stuff
============
python flow-run.py sqlite2.TestExportSQLite marius
python flow-continue.py 02 marius

Console stuff
==============
- activate Anaconda in the corporate machine
cmd.exe "/K" c:\PROGRA~1\Anaconda3\Scripts\activate.bat c:\PROGRA~1\Anaconda3
integrated in VSC settings see: settings.json 
- activate git cmd terminal
%LOCALAPPDATA%\Microsoft\AppV\Client\Integration\FD19DC5B-9750-48C4-8C82-71001E35740E\Root\git-cmd.exe
- activate git bash terminal (it is not working starting in a cmd, must be configured in VSC)
%LOCALAPPDATA%\Microsoft\AppV\Client\Integration\FD19DC5B-9750-48C4-8C82-71001E35740E\Root\git-bash.exe
- activate Proxy
python proxy.py (and run the two displayed commands)
- ana.bat for configuring path to work with anaconda

Package
=======

From folder staluigi run this:
pip install .
or 
python setup.py install

Workflow1
=========

python flow-run.py workflow1.TakeInputFile marius --filename test_1000_lines.csv
python flow-run.py validations.ValidationsTask marius --inputfile test_1000_lines.csv
python flow-clean.py
python flow-run.py storage.EBSSBS_PRL_A_PRIM marius